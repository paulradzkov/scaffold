/*! bettertext.css v3.0.0 | MIT License | github.com/paulradzkov/bettertext.css */

.bettertext-settings() {

    //settings
    @fz: 16px;                         // default font-size in pixels
    @rythm: 24px;                      // vertical rythm = line-height in pixels
    @fz-small: 12px;                   // smaller font-size (px)
    @linel: 50rem;                     // max-width for text (em or rem)
    @font-body: -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
                                       // body
    @font-headers: @font-body;         // headers
    @font-code: Courier, monospace, monospace;  // code (duplication is intentional)
    @scale1: 1.125;                    // header size multiplier for 'mobile' screens
    @scale2: 1.250;                    // header size multiplier for 'desktop' screens

    // margins for body, articles and sections
    @space-around: ~"40px";

    // breakpoint to switch from 'mobile' to 'desktop'
    @bettertext-breakpoint: ~"(min-width: 768px)";

    @reset-classname: default;
    @central-layout: true;
}

.bettertext-calculations() {

    //calculations
    // you almost never need to edit below

    // one rem is 16px by default
    @onerem: 16px;

    // base font-size in ems
    @fz-ems: unit((@fz / @onerem), em);

    // unitless line-height
    @lh: unit((@rythm / @fz));

    // margins for paragraphs, lists and other tags
    @m-default: unit(@lh, em);

    // small font-size in ems
    @fz-small-ems:  unit((@fz-small / @fz), em);

    //headers size calculations for small screens
    @h0-fz-px: round((@fz * pow(@scale1, 5)));
    @h1-fz-px: round((@fz * pow(@scale1, 4)));
    @h2-fz-px: round((@fz * pow(@scale1, 3)));
    @h3-fz-px: round((@fz * pow(@scale1, 2)));
    @h4-fz-px: round((@fz * pow(@scale1, 1)));
    @h5-fz-px: round((@fz * pow(@scale1, 0)));
    @h6-fz-px: @fz-small;

    @h1-fz: unit((@h1-fz-px / @fz), em);
    @h2-fz: unit((@h2-fz-px / @fz), em);
    @h3-fz: unit((@h3-fz-px / @fz), em);
    @h4-fz: unit((@h4-fz-px / @fz), em);
    @h5-fz: unit((@h5-fz-px / @fz), em);
    @h6-fz: @fz-small-ems;

    //headers size calculations for large screens
    @h0-l-fz-px: round((@fz * pow(@scale2, 5)));
    @h1-l-fz-px: round((@fz * pow(@scale2, 4)));
    @h2-l-fz-px: round((@fz * pow(@scale2, 3)));
    @h3-l-fz-px: round((@fz * pow(@scale2, 2)));
    @h4-l-fz-px: round((@fz * pow(@scale2, 1)));

    @h1-l-fz: unit((@h1-l-fz-px / @fz), em);
    @h2-l-fz: unit((@h2-l-fz-px / @fz), em);
    @h3-l-fz: unit((@h3-l-fz-px / @fz), em);
    @h4-l-fz: unit((@h4-l-fz-px / @fz), em);

    //headers lihe-height
    @lh-slope: ((@rythm - @h0-fz-px * 1.1) / (@fz - @h0-fz-px));
    @lh-shift: (@rythm - @lh-slope * @fz);

    @h1-lh: unit((round((@lh-slope * @h1-fz-px + @lh-shift)) / @h1-fz-px));
    @h2-lh: unit((round((@lh-slope * @h2-fz-px + @lh-shift)) / @h2-fz-px));
    @h3-lh: unit((round((@lh-slope * @h3-fz-px + @lh-shift)) / @h3-fz-px));
    @h4-lh: unit((round((@lh-slope * @h4-fz-px + @lh-shift)) / @h4-fz-px));
    @h5-lh: unit((round((@lh-slope * @h5-fz-px + @lh-shift)) / @h5-fz-px));
    @h6-lh: unit((@rythm / @fz-small));

    @lh-l-slope: ((@rythm - @h0-l-fz-px * 1.1) / (@fz - @h0-l-fz-px));
    @lh-l-shift: (@rythm - @lh-l-slope * @fz);

    @h1-l-lh: unit((round((@lh-l-slope * @h1-l-fz-px + @lh-l-shift)) / @h1-l-fz-px));
    @h2-l-lh: unit((round((@lh-l-slope * @h2-l-fz-px + @lh-l-shift)) / @h2-l-fz-px));
    @h3-l-lh: unit((round((@lh-l-slope * @h3-l-fz-px + @lh-l-shift)) / @h3-l-fz-px));
    @h4-l-lh: unit((round((@lh-l-slope * @h4-l-fz-px + @lh-l-shift)) / @h4-l-fz-px));

    // new headers margin-top
    @h1-mt: unit(((@rythm + @fz * 4) / @h1-fz-px), em);
    @h2-mt: unit(((@rythm + @fz * 3) / @h2-fz-px), em);
    @h3-mt: unit(((@rythm + @fz * 2) / @h3-fz-px), em);
    @h4-mt: unit(((@rythm + @fz * 1) / @h4-fz-px), em);
    @h5-mt: unit(((@rythm) /           @h5-fz-px), em);
    @h6-mt: unit(((@rythm) /           @fz-small), em);

    // new headers margin-top for large screens
    @h1-l-mt: unit(((@rythm * 5 + @fz * 3) / @h1-l-fz-px), em);
    @h2-l-mt: unit(((@rythm * 3 + @fz * 2) / @h2-l-fz-px), em);
    @h3-l-mt: unit(((@rythm * 2 + @fz * 1) / @h3-l-fz-px), em);
    @h4-l-mt: unit(((@rythm * 1 + @fz * 1) / @h4-l-fz-px), em);

    //headers margin-bottom
    @h1-mb: unit((@lh / @h1-fz), em);
    @h2-mb: unit((@lh / @h2-fz), em);
    @h3-mb: unit((@lh / @h3-fz), em);
    @h4-mb: unit((@lh / @h4-fz), em);
    @h5-mb: 0;
    @h6-mb: 0;

    //headers margin-bottom for large screens
    @h1-l-mb: unit((@lh / @h1-l-fz), em);
    @h2-l-mb: unit((@lh / @h2-l-fz), em);
    @h3-l-mb: unit((@lh / @h3-l-fz), em);
    @h4-l-mb: unit((@lh / @h4-l-fz), em);

    //double headers margin-top
    @h1h2-mt: unit( @h2-lh ,em);
    @h2h3-mt: unit( @h3-lh ,em);
    @h3h4-mt: unit( @h4-lh ,em);
    @h4h5-mt: unit((@lh / @h5-fz), em);
    @h5h6-mt: unit((@lh / @h6-fz), em);
}

& {

    .bettertext-settings();

    .bettertext-calculations();

    /*
    1. Prevent adjustments of font size after orientation changes in
       IE on Windows Phone and in iOS.
    2. Because the text-underline-position property inherits and is not reset
       by the text-decoration shorthand property, it may be appropriate to set
       its value at a global level. For example, the under value may be appropriate
       for a document with lots of chemical and mathematical formulas, which make
       a large use of subscripts.
    */
    html {
        -ms-text-size-adjust: 100%; /* 1 */
        -webkit-text-size-adjust: 100%; /* 1 */
        text-underline-position: under; /* 2 */
    }

    /*
    1. Render fallback font immediately, wait for webfont to load infinitely.
    2. Font kerning information stored in the font must be applied.
    3. The browser emphasizes legibility over rendering speed and geometric
       precision. This enables kerning and optional ligatures.
    4. OpenType features
       https://helpx.adobe.com/typekit/using/open-type-syntax.html
       "kern" — kerning
       "liga" — common ligatures
       "clig" — contextual ligatures
       "calt" — contextual alternates
    */
    body {
        font-family: @font-body;
        font-size: @fz-ems;
        line-height: @lh;
        font-display: swap; /* 1 */
        font-kerning: normal; /* 2 */
        text-rendering: optimizeLegibility; /* 3 */
        font-variant-ligatures: common-ligatures contextual; /* 4 */
        font-feature-settings: "kern", "liga", "clig", "calt"; /* 4 */
    }

    /*
    Add default spacing for structure tags without classnames
    */
    body:not(.@{reset-classname}),
    article:not(.@{reset-classname}),
    section:not(.@{reset-classname}) {
        margin: @space-around;

        /*
        Reset nested margins
        */
        article:not(.@{reset-classname}),
        section:not(.@{reset-classname}) {
            margin-left: 0;
            margin-right: 0;
        }
    }

    p {
        margin: 0 0 @m-default;
        max-width: @linel;
    }

    /*
    minimum paragraph width when floating http://css-tricks.com/minimum-paragraph-widths/
    */
    p:before,
    ol:not(.@{reset-classname}):before,
    ul:not(.@{reset-classname}):before {
        content: '';
        display: block;
        width: 10em;
        overflow: hidden;
    }

    li p:before {
        content: none;
    }

    h1, h2, h3, h4, h5, h6 {
        font-family: @font-headers;
        font-weight: bolder;
        max-width: @linel;
    }

    h1 {
        font-size: @h1-fz;
        line-height: @h1-lh;
        margin-top: @h1-mt;
        margin-bottom: @h1-mb;
    }

    h2 {
        font-size: @h2-fz;
        line-height: @h2-lh;
        margin-top: @h2-mt;
        margin-bottom: @h2-mb;
    }

    h3 {
        font-size: @h3-fz;
        line-height: @h3-lh;
        margin-top: @h3-mt;
        margin-bottom: @h3-mb;
    }

    h4 {
        font-size: @h4-fz;
        line-height: @h4-lh;
        margin-top: @h4-mt;
        margin-bottom: @h4-mb;
    }

    h5 {
        font-size: @h5-fz;
        line-height: @h5-lh;
        margin-top: @h5-mt;
        margin-bottom: @h5-mb;
    }

    h6 {
        font-size: @h6-fz;
        line-height: @h6-lh;
        margin-top: @h6-mt;
        margin-bottom: @h6-mb;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    // do not create breakpoint and override if scale is not changing
    & when not (@scale1 = @scale2) {
        @media @bettertext-breakpoint {

            h1 {
                font-size: @h1-l-fz;
                line-height: @h1-l-lh;
                margin-top: @h1-l-mt;
                margin-bottom: @h1-l-mb;
            }

            h2 {
                font-size: @h2-l-fz;
                line-height: @h2-l-lh;
                margin-top: @h2-l-mt;
                margin-bottom: @h2-l-mb;
            }

            h3 {
                font-size: @h3-l-fz;
                line-height: @h3-l-lh;
                margin-top: @h3-l-mt;
                margin-bottom: @h3-l-mb;
            }

            h4 {
                font-size: @h4-l-fz;
                line-height: @h4-l-lh;
                margin-top: @h4-l-mt;
                margin-bottom: @h4-l-mb;
            }
        }
    }

    h1:first-child,
    h2:first-child,
    h3:first-child,
    h4:first-child,
    h5:first-child,
    h6:first-child {
        margin-top: 0;
    }

    /* double headers */
    h1 + h2 {
        margin-top: @h1h2-mt;
    }
    h2 + h3 {
        margin-top: @h2h3-mt;
    }
    h3 + h4 {
        margin-top: @h3h4-mt;
    }
    h4 + h5 {
        margin-top: @h4h5-mt;
    }
    h5 + h6 {
        margin-top: @h5h6-mt;
    }

    /* lists */
    /* lists without classes */

    // 1) force reflow to fix bullet overlapping.
    // See https://git.io/vHyUo for details.

    ul:not(.@{reset-classname}),
    ol:not(.@{reset-classname}) {
        margin: 0 0 @m-default;
        max-width: calc(@linel - 2.5em);
        padding-left: 0;
        padding-right: 2.5em;

        ul,
        ol {
            margin-bottom: 0;
        }

        li {
            transform: translateX(2.5em);
            animation: fixlists 1s; // 1)
        }
    }

    @keyframes fixlists {
        0%   { text-indent: -0.001em;}
        100% { text-indent: 0;}
    }

    img {
        max-width: 100%;
        height: auto;
        vertical-align: bottom;
    }

    p img:not(:only-child) {
        vertical-align: baseline;
    }

    figure:not(.@{reset-classname}) {
        margin: (@m-default * 2) 0;

        & > p {
            max-width: (@linel);
            font-size: @fz-small-ems;
            margin: 0.5em 0 0;
        }
    }

    figcaption:not(.@{reset-classname}) {
        max-width: (@linel);
        font-size: @fz-small-ems;
        margin: 0.5em 0 (@m-default * 2);

        & > p {
            margin: 0.5em 0 0;
        }
    }

    blockquote:not(.@{reset-classname}) {
        box-sizing: border-box;
        max-width: calc(@linel - 5em);
        margin: 0 0 (@m-default);
        padding: (@m-default) 2.5em;

        & > p:last-child {
            margin-bottom: 0;
        }

        & > footer,
        & > cite {
            display: block;
            font-size: @fz-small-ems;
        }
    }

    /*
    1. Open Type features
       https://helpx.adobe.com/typekit/using/open-type-syntax.html
       "kern" — kerning
       "liga" — common ligatures
       "clig" — contextual ligatures
       "calt" — contextual alternates
       "lnum" — lining figures (not oldstyle figures "onum")
       "tnum" — tabular figures (not proportional figures "pnum")
    */
    table:not(.@{reset-classname}) {
        margin-top: (@m-default * 2);
        margin-bottom: (@m-default * 2);
        border-collapse: separate;
        border-spacing: 0;
        font-variant-numeric: lining-nums tabular-nums diagonal-fractions; /* 1 */
        font-feature-settings: "kern", "liga", "clig", "calt", "lnum", "tnum", "frac"; /* 1 */
        width: 100%;

        caption {
            text-align: left;
            font-size: @fz-small-ems;
            margin-bottom: 0.625em;
        }

        td,
        th {
            padding: 0.5em 1em;
            text-align: left;
            vertical-align: top;
            border-style: solid;
            border-color: rgba(128,128,128,0.2);
            border-width: 0 0 1px;

            &:first-child {
                padding-left: 0;
            }

            &:last-child {
                padding-right: 0;
            }
        }

        th {
            font-weight: bolder;
        }

        thead {
            td,
            th {
                vertical-align: bottom;
                border-bottom-width: 2px;
            }
        }
    }

    /* definition lists */

    dl:not(.@{reset-classname}) {
        max-width: @linel;
        margin: 0 0 @m-default;

        dt:not([class]) {
            font-weight: bolder;
        }

        dd:not([class]) {
            margin: 0 0 @m-default;
        }
    }

    /*
    1. Add the correct box sizing in Firefox.
    2. Show the overflow in Edge and IE.
    */
    hr {
        box-sizing: content-box; /* 1 */
        height: 0; /* 1 */
        overflow: visible; /* 2 */

        &:not(.@{reset-classname}) {
            border: 0;
            border-bottom: 1px solid;
            margin-top: @m-default;
            margin-bottom: @m-default;
            max-width: @linel;
            opacity: .1;
        }
    }

    em > em {
        font-family: cursive;
    }

    /*
    1. Increase letter-spacing for all capitals
    2. Compensate letter-spacing after last letter to keep same optical word-spacing
    3. Open Type features
       https://helpx.adobe.com/typekit/using/open-type-syntax.html
       "kern" — kerning
       "liga" — common ligatures
       "clig" — contextual ligatures
       "calt" — contextual alternates
       "onum" — oldstyle figures
       "pnum" — proportional figures
    4. Undo normalize.css styles
    */
    abbr {
        letter-spacing: .05em; /* 1 */
        margin-right: -.05em; /* 2 */
        font-variant-numeric: oldstyle-nums proportional-nums; /* 3 */
        font-feature-settings: "kern", "liga", "clig", "calt", "onum", "pnum"; /* 3 */

        &[title] {
            border-bottom: none; /* 4 */
        }
    }

    /*
    1. Use 'normal' to look same as regular text
    */
    dfn,
    address {
        font-style: normal; /* 1 */
    }

    /*
    1. Use 'bolder' instead of 'bold' to make styles relative to the weight of parent node
    */
    strong,
    b,
    dt,
    dfn {
        font-weight: bolder; /* 1 */
    }

    /*
    1. Correct the inheritance and scaling of font size in all browsers.
    2. Correct the odd `em` font sizing in all browsers.
    3. Open Type features:
       https://helpx.adobe.com/typekit/using/open-type-syntax.html
       - tunr off ligatures
       - use lining figures and tabulat figures
       "kern" — kerning
       "liga" — common ligatures
       "clig" — contextual ligatures
       "calt" — contextual alternates
       "lnum" — lining figures (not oldstyle figures "onum")
       "tnum" — tabular figures (not proportional figures "pnum")
    */
    pre,
    code,
    kbd,
    samp {
        font-family: @font-code; /* 1 */
        font-size: 1em; /* 2 */
        font-variant-ligatures: none; /* 3 */
        font-variant-numeric: lining-nums tabular-nums; /* 3 */
        font-feature-settings: "kern", "liga" 0, "clig" 0, "calt" 0, "lnum", "tnum"; /* 3 */
    }

    var {
        font-family: Georgia, Times, serif;
        font-variant-numeric: lining-nums tabular-nums; /* 3 */
        font-feature-settings: "kern", "liga", "clig", "calt", "lnum", "tnum"; /* 3 */
        font-style: italic;
    }

    /* 1. opinionated: wrap words */
    pre {
        margin: (@m-default) 0;
        white-space: pre-wrap; /* 1 */
    }

    /*
    1. Break text using the least restrictive line break rule.
       Typically used for short lines, such as in newspapers.
    2. To prevent overflow, normally unbreakable words may be broken at arbitrary points
       if there are no otherwise acceptable break points in the line.
    3. Adjust font-size and line-height.
       Make monospaced font looks same height as regular paragraph text and compensate
       line-height.
    */
    p code,
    p samp {
        line-break: loose; /* 1 */
        overflow-wrap: break-word; /* 2 */
        font-size: 1.075em; /* 3 */
        line-height: 1.3; /* 3 */
    }

    mark {
        color: inherit;
        background-color: hsla(54, 100%, 50%, 0.5);
    }

    ins {
        text-decoration: underline dashed green;
        text-underline-position: under;
    }

    /**
     * Prevent `sub` and `sup` affecting `line-height` in all browsers.
     */

    sub,
    sup {
        font-size: @fz-small-ems;
        line-height: 0;
        position: relative;
        vertical-align: baseline;
    }

    sub {
        bottom: -0.25em;
    }

    sup {
        top: -0.5em;
    }

    small {
        font-size: @fz-small-ems;
    }

    /* 1 - width same as line-height for square buttons */
    kbd:not(.default) {
        box-sizing: content-box;
        display: inline-block;
        margin: 0.25em;
        border: 1px solid;
        border-radius: 0.25em;
        padding: 0 0.25em;
        font-family: @font-body;
        font-size: 87.5%;
        line-height: 1.5em;
        min-width: 1em; /* 1 */
        text-align: center;
    }

    // central layout experiment
    & when (@central-layout) {
        body:not(.@{reset-classname}),
        article:not(.@{reset-classname}),
        section:not(.@{reset-classname}) {

            & > *:not(.@{reset-classname}) {
                margin-left: auto;
                margin-right: auto;
                max-width: @linel;
            }

            & > ul:not(.@{reset-classname}),
            & > ol:not(.@{reset-classname}) {
                max-width: calc(@linel - 2.5em);
            }

            & > pre:not(.@{reset-classname}) {
                max-width: calc(100% - (100% - @linel) / 2);
                margin-left: auto;
                margin-right: 0;
            }

            > figure:not(.@{reset-classname}) {
                display: table;
                max-width: 100%;

                > *:not(img) {
                    margin-left: auto;
                    margin-right: auto;
                    max-width: @linel;
                }

                figcaption:not(default) {
                    max-width: (@linel / 2);
                }
            }
        }
    }
}
